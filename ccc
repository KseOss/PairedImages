using Microsoft.Maui.Controls;

namespace PR6_MAUI
{
    public partial class AlarmPage : ContentPage
    {
        private TimeSpan _alarmTime;
        private IDispatcherTimer _timer;
        private bool _alarmTriggered = false;

        public AlarmPage()
        {
            InitializeComponent();
            SetupAlarmTimer();
        }

        private void SetupAlarmTimer()
        {
            _timer = Application.Current.Dispatcher.CreateTimer();
            _timer.Interval = TimeSpan.FromSeconds(1);
            _timer.Tick += OnAlarmTimerTick;
        }

        private void OnAlarmToggled(object sender, ToggledEventArgs e)
        {
            if (e.Value)
            {
                _alarmTime = timePicker.Time;
                timePicker.IsEnabled = false;
                _alarmTriggered = false;
                _timer.Start();
                statusLabel.Text = "Будильник включен";
                statusLabel.TextColor = Colors.Green;
            }
            else
            {
                timePicker.IsEnabled = true;
                _timer.Stop();
                statusLabel.Text = "Будильник выключен";
                statusLabel.TextColor = Colors.Gray;
            }
        }

        private async void OnAlarmTimerTick(object sender, EventArgs e)
        {
            DateTime now = DateTime.Now;
            TimeSpan currentTime = new TimeSpan(now.Hour, now.Minute, now.Second);

            // Проверяем с точностью до секунды для надежности
            if (Math.Abs(_alarmTime.TotalMinutes - currentTime.TotalMinutes) < 1 && 
                !_alarmTriggered && CheckDayOfWeek(now.DayOfWeek))
            {
                _alarmTriggered = true;
                _timer.Stop();
                await ShowAlarmNotification();
            }
        }

        private bool CheckDayOfWeek(DayOfWeek day)
        {
            return day switch
            {
                DayOfWeek.Monday => mondaySwitch.IsToggled,
                DayOfWeek.Tuesday => tuesdaySwitch.IsToggled,
                DayOfWeek.Wednesday => wednesdaySwitch.IsToggled,
                DayOfWeek.Thursday => thursdaySwitch.IsToggled,
                DayOfWeek.Friday => fridaySwitch.IsToggled,
                DayOfWeek.Saturday => saturdaySwitch.IsToggled,
                DayOfWeek.Sunday => sundaySwitch.IsToggled,
                _ => false
            };
        }

        private async Task ShowAlarmNotification()
        {
            // Используем наш сервис уведомлений
            await NotificationService.ShowNotification("Будильник", "Просыпайтесь! Время вставать!");
            
            // Дополнительно: повторяем уведомление пока пользователь не отключит
            bool stopAlarm = await Application.Current.MainPage.DisplayAlert(
                "Будильник", 
                "Просыпайтесь! Время вставать!", 
                "Отключить", 
                "Повторить через 1 мин");
            
            if (!stopAlarm)
            {
                // Повторить через 1 минуту
                _alarmTime = _alarmTime.Add(TimeSpan.FromMinutes(1));
                _alarmTriggered = false;
                _timer.Start();
            }
            else
            {
                alarmSwitch.IsToggled = false;
            }
        }
    }
}